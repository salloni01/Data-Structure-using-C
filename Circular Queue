#include <stdio.h>
#include <limits.h>
#define SIZE 100
#include <stdlib.h>
int queue[SIZE], rear = -1, front = -1; // front points first element
int isEmpty()
{
    return (front == -1) ? 1 : 0; // ternary condition
}  
int isFull()
{
    return((rear+1)%SIZE==front)?1:0;
}
void enqueue(int data)// jab function call hua tab confirm hogaya ki queue ke andar space hai
{ 
    rear=(rear+1)%SIZE;
    queue[rear]=data;
    if(front==-1)
        front=rear;// front=0 both are same
    printf("Element Inserted !!!\n");
}
int dequeue()
{ 
    int data = queue[front];
    if (front == rear){
        rear=front=-1;
    }
    else
        front=(front+1)%SIZE;
    return data;
}
int peek()// front
{ 
    return queue[front];
}
void display()
{
   int i=front;
   while(i!=rear){
    printf("%d ",queue[i]);
    i=(i+1)%SIZE;
   }
   printf("%d",queue[rear]);
}
int main()
{
    system("cls");
    while (1)
    {
        printf("1.Enqueue\n");
        printf("2.Dequeue\n");
        printf("3.Peek\n");
        printf("4.Show\n");
        printf("5.Exit\n");
        int choice, data;
        printf("Enter choice: ");
        scanf("%d", &choice);
        switch (choice)
        {
        case 1:
            if (isFull())
                printf("Queue Overflow !!!!\n");
            else
            {
                printf("Enter element: ");
                scanf("%d", &data);
                enqueue(data);
            }
            break;
        case 2:
            if (isEmpty())
                printf("Queue Underflow!!!!\n");
            else
            {
                printf("%d dequeue from the queue\n", dequeue());
            }
        case 3:
            if (isEmpty())
                printf("Queue is empty!!!!\n");
            else
            {
                printf("Element available at front is %d\n", peek());
            }

            break;
        case 4:
            if (isEmpty())
                printf("Queue is empty!!!!\n");
            else
            {
                display();
            }

            break;
        case 5:
            exit(0);
            break;
        default:
            printf("Invalid Choice !!!!!\n");
        }
        printf("\n");
        system("pause"); // without pressing system will not work
    }
   
    return 0;
}
