#include <stdio.h>
#define MAX 100
int tree[MAX];
int tree1[MAX];
#include <stdlib.h>
void init(int tree[]){
for(int i=0;i<MAX;i++){
 tree[i]=-1;
}
}
void insert(int tree[],int n,int root){
if(tree[root]==-1)
tree[root]=n;
else if(tree[root]>n)
insert(tree,n,2*root+1);
else
insert(tree,n,2*root+2);
}
int is(int tree[],int tree1[],int root){
    if(tree[root]==-1 && tree1[root]==-1)
        return 1;
    else if (tree[root]==-1|| tree1[root]==-1)
        return 0;
    return (tree[root]==tree1[root] && is(tree,tree1,2*root+1)&& is(tree,tree1,2*root+2));
}
        int main() {
int n,value;
scanf("%d",&n);
init(tree);
            init(tree1);
for(int i=0;i<n;i++){
scanf("%d",&value);
    insert(tree,value,0);
}
            for(int i=0;i<n;i++){
scanf("%d",&value);
  insert(tree1,value,0);
}
            if(is(tree,tree1,0))
                      printf("Identical");
    else
        printf("Not Identical");
    return 0;
            
}
